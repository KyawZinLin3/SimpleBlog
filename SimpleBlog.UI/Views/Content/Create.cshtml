@model SimpleBlog.UI.Models.Content.CompositeContent


@{
    ViewData["Title"] = "Create Content";
}
<style>
    .chip {
        display: inline-flex;
        align-items: center;
        background-color: #007bff;
        color: white;
        border-radius: 20px;
        padding: 5px 10px;
        margin: 3px;
        font-size: 14px;
    }

        .chip .close-btn {
            margin-left: 8px;
            cursor: pointer;
            font-weight: bold;
        }
</style>

<div class="container mt-5">
    <div class="col-md-8 offset-md-2">

        <h3 class="text-center">Create a New Post</h3>

        <!-- Cover Image Upload -->
        <div class="mb-3 text-center">
            <label class="form-label">Cover Image</label>
            <div id="coverImageContainer">
                @if (ViewBag.CoverImagePath != null)
                {
                    <img src="@ViewBag.CoverImagePath" id="coverImagePreview" class="img-fluid mb-2">
                    <button type="button" class="btn btn-danger" id="removeCover">Remove</button>
                }
                else
                {
                    <input type="file" id="coverImage" name="CoverImage" class="form-control" accept="image/*">
                    <button type="button" class="btn btn-primary mt-2" id="uploadCover">Add a Cover Image</button>
                }
            </div>
        </div>

        <form asp-action="Create" method="post" enctype="multipart/form-data">

            <!-- Title -->
            <div class="mb-3">
                <label class="form-label">Title</label>
                <input asp-for="FormData.Title" class="form-control" required>
                <span asp-validation-for="FormData.Title" class="text-danger"></span>
            </div>

            <!-- Tags (Multi-Select Dropdown with Chips) -->
            <div class="mb-3">
                <label class="form-label">Tags</label>
             @*    <select asp-for="Tags" id="tagsSelect" class="form-control" multiple="multiple">
                    <option value="Bootstrap">Bootstrap</option>
                    <option value="ASP.NET">ASP.NET</option>
                    <option value="C#">C#</option>
                    <option value="JavaScript">JavaScript</option>
                    <option value="Web Development">Web Development</option>
                </select>
                <span asp-validation-for="Tags" class="text-danger"></span> *@
                <select id="multiSelect" class="form-select" name="FormData.TagId"  multiple="multiple">
                    
                 
                    @foreach (var tag in Model.Tags)
                    {
                        <option value="@tag.Id">@tag.Name</option>
                        
                    }
                </select>

                <!-- Selected Items Display -->
                <div id="selectedItems" class="mt-3 d-flex flex-wrap"></div>
                <span asp-validation-for="FormData.TagId" class="text-danger"></span>
            </div>

            <!-- TinyMCE Rich Text Editor -->
            <div class="mb-3">
                <label class="form-label">Content</label>
                <textarea asp-for="FormData.Content" id="editor" class="form-control"></textarea>
                <span asp-validation-for="FormData.Content" class="text-danger"></span>
            </div>

            <!-- Buttons -->
            <div class="d-flex justify-content-between">
                <button type="submit" name="actionType" value="draft" class="btn btn-secondary">Save Draft</button>
                <button type="submit" name="actionType" value="publish" class="btn btn-success">Publish</button>
            </div>

        </form>

        <!-- Success Message -->
        @if (ViewBag.Message != null)
        {
            <div class="alert alert-success mt-3">@ViewBag.Message</div>
        }

    </div>
</div>

<!-- TinyMCE & Select2 Scripts -->
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
    <script src="https://cdn.tiny.cloud/1/plnvwnmihvy6g30r5uf6uuyfc1j0f75vepsp660evfh82263/tinymce/6/tinymce.min.js"></script>

    <script>
        // Initialize TinyMCE
        tinymce.init({
            selector: '#editor',
            height: 300,
            plugins: 'lists link image preview wordcount',
            toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | bullist numlist | link image'
        });

        // Initialize Select2 for Multi-Select Tags
        // $(document).ready(function () {
        //     $('#tagsSelect').select2({
        //         placeholder: "Select Tags",
        //         allowClear: true,
        //         tags: true, // Allow custom tags
        //         tokenSeparators: [','],
        //         closeOnSelect: false // Keep the dropdown open after selecting
        //     });
        // });

        // let selectedValues = new Set(); // To store selected items

        // document.getElementById("multiSelect").addEventListener("change", function () {
        //     let selectedOption = this.value;
        //     let selectedText = this.options[this.selectedIndex].text;

        //     if (!selectedValues.has(selectedOption)) {
        //         selectedValues.add(selectedOption);
        //         addChip(selectedOption, selectedText);
        //     }

        //     // Reset dropdown to placeholder
        //     this.value = "";
        // });

        function addChip(value, text) {
            let chipContainer = document.getElementById("selectedItems");

            let chip = document.createElement("div");
            chip.classList.add("chip");
            chip.dataset.value = value;
            chip.innerHTML = `${text} <span class="close-btn">&times;</span>`;

            chip.querySelector(".close-btn").addEventListener("click", function () {
                chip.remove();
                selectedValues.delete(value);
            });

            chipContainer.appendChild(chip);
        }

        // Cover Image Upload Logic
        $("#uploadCover").click(function () {
            $("#coverImage").click();
        });

        $("#coverImage").change(function () {
            let file = this.files[0];
            if (file) {
                let reader = new FileReader();
                reader.onload = function (e) {
                    $("#coverImageContainer").html('<img src="' + e.target.result + '" class="img-fluid mb-2">' +
                        '<button type="button" class="btn btn-danger" id="removeCover">Remove</button>');
                };
                reader.readAsDataURL(file);
            }
        });

        $(document).on("click", "#removeCover", function () {
            $("#coverImageContainer").html('<input type="file" id="coverImage" name="CoverImage" class="form-control">' +
                '<button type="button" class="btn btn-primary mt-2" id="uploadCover">Add a Cover Image</button>');
        });
    </script>
}
